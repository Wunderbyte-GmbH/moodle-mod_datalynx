{"version":3,"file":"datalynxloadviews.min.js","sources":["../src/datalynxloadviews.js"],"sourcesContent":["define(['jquery'], function($) {\n\n    return {\n        init: function(options) {\n            // Get field name from options.\n            var dffield = options.dffield;\n            var viewfield = options.viewfield;\n            var textfieldfield = options.textfieldfield;\n            var actionurl = options.acturl;\n            var presentdlid = options.presentdlid;\n            var thisfieldstring = options.thisfieldstring;\n            var update = options.update;\n            var fieldtype = options.fieldtype;\n\n            // Read courseid and call ajax at change to receive all groups in course.\n            $(\"#id_\"+dffield).on( \"change\", function () {\n                var view = $( \"#id_\"+viewfield ); // Get view select.\n                var textfield = $( \"#id_\"+textfieldfield ); // Get textfield select.\n                var dfid = $(this).val(); // Get the datalynx id.\n\n                // Remove view and textfield options from view select.\n                if (view) {\n                    view.find('option').remove().end(); // Remove current options.\n                }\n                if (textfield) {\n                    textfield.find('option').remove().end(); // Remove current options.\n                }\n\n\n                // Load views and/or textfields from datalynx.\n                if (dfid != 0) {\n                    // Ajax request to get current options.\n                    $.ajax(\n                        {\n                            method: \"POST\",\n                            url: actionurl,\n                            data: 'dfid=' + dfid,\n                            context: this,\n                            dataType: \"text\",\n                            success: function(data) {\n                                if (data != '') {\n                                    var respoptions = data.split('#');\n\n                                    // Add view options.\n                                    if (view) {\n                                        var viewoptions = respoptions[0].split(',');\n                                        for (var i = 0; i < viewoptions.length; ++i) {\n                                            var arr = viewoptions[i].trim().split(' ');\n                                            var qid = arr.shift();\n                                            var qname = arr.join(' ');\n                                            view.append($(\"<option></option>\").attr(\"value\",qid).text(qname));\n                                        }\n                                    }\n\n                                    // Add textfield options.\n                                    if (textfield) {\n                                        var textfieldoptions = respoptions[1].split(',');\n\n                                        // If this datalynx instance itself is chosen provide this new field itself as first option.\n                                        if (dfid == presentdlid && update == 0 && fieldtype == 'text') {\n                                            textfield.append($(\"<option></option>\").attr(\"value\",\"-1\").text(thisfieldstring));\n                                        }\n                                        for (var i = 0; i < textfieldoptions.length; ++i) {\n                                            var arr = textfieldoptions[i].trim().split(' ');\n                                            var qid = arr.shift();\n                                            var qname = arr.join(' ');\n                                            textfield.append($(\"<option></option>\").attr(\"value\",qid).text(qname));\n                                        }\n                                    }\n                                }\n                            },\n                            error: function() {\n                                alert(\"Error while loading views and textfields.\");\n                            }\n                        });\n                }\n            });\n        }\n    };\n});"],"names":["define","$","init","options","dffield","viewfield","textfieldfield","actionurl","acturl","presentdlid","thisfieldstring","update","fieldtype","on","view","textfield","dfid","this","val","find","remove","end","ajax","method","url","data","context","dataType","success","respoptions","split","viewoptions","i","length","qid","arr","trim","shift","qname","join","append","attr","text","textfieldoptions","error","alert"],"mappings":"AAAAA,wCAAO,CAAC,WAAW,SAASC,SAEjB,CACHC,KAAM,SAASC,aAEPC,QAAUD,QAAQC,QAClBC,UAAYF,QAAQE,UACpBC,eAAiBH,QAAQG,eACzBC,UAAYJ,QAAQK,OACpBC,YAAcN,QAAQM,YACtBC,gBAAkBP,QAAQO,gBAC1BC,OAASR,QAAQQ,OACjBC,UAAYT,QAAQS,UAGxBX,EAAE,OAAOG,SAASS,GAAI,UAAU,eACxBC,KAAOb,EAAG,OAAOI,WACjBU,UAAYd,EAAG,OAAOK,gBACtBU,KAAOf,EAAEgB,MAAMC,MAGfJ,MACAA,KAAKK,KAAK,UAAUC,SAASC,MAE7BN,WACAA,UAAUI,KAAK,UAAUC,SAASC,MAK1B,GAARL,MAEAf,EAAEqB,KACE,CACIC,OAAQ,OACRC,IAAKjB,UACLkB,KAAM,QAAUT,KAChBU,QAAST,KACTU,SAAU,OACVC,QAAS,SAASH,SACF,IAARA,KAAY,KACRI,YAAcJ,KAAKK,MAAM,QAGzBhB,aACIiB,YAAcF,YAAY,GAAGC,MAAM,KAC9BE,EAAI,EAAGA,EAAID,YAAYE,SAAUD,EAAG,KAErCE,KADAC,IAAMJ,YAAYC,GAAGI,OAAON,MAAM,MACxBO,QACVC,MAAQH,IAAII,KAAK,KACrBzB,KAAK0B,OAAOvC,EAAE,qBAAqBwC,KAAK,QAAQP,KAAKQ,KAAKJ,WAK9DvB,UAAW,KACP4B,iBAAmBd,YAAY,GAAGC,MAAM,KAGxCd,MAAQP,aAAyB,GAAVE,QAA4B,QAAbC,WACtCG,UAAUyB,OAAOvC,EAAE,qBAAqBwC,KAAK,QAAQ,MAAMC,KAAKhC,sBAE3DsB,EAAI,EAAGA,EAAIW,iBAAiBV,SAAUD,EAAG,KAC1CG,IACAD,KADAC,IAAMQ,iBAAiBX,GAAGI,OAAON,MAAM,MAC7BO,QACVC,MAAQH,IAAII,KAAK,KACrBxB,UAAUyB,OAAOvC,EAAE,qBAAqBwC,KAAK,QAAQP,KAAKQ,KAAKJ,YAK/EM,MAAO,WACHC,MAAM"}