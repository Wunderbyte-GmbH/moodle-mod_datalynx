{"version":3,"file":"pdfembed.min.js","sources":["../src/pdfembed.js"],"sourcesContent":["// This file is part of the mod_coursecertificate plugin for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module provides functionality for embedding PDFs using pdf.js.\n *\n * @module      mod_datalynx/pdfembed\n * @copyright   2023 David Bogner <david.bogner@wunderbyte.at>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n// import 'mod_datalynx/pdf';\n\nimport * as pdfjsLib from 'mod_datalynx/pdf';\nimport pdfjsWorker from 'mod_datalynx/pdf.worker';\n\nfunction renderPDFfunction(url, canvasContainer, options) {\n\n    var options = options || { scale: 1 };\n\n    function renderPage(page) {\n        var viewport = page.getViewport(options.scale);\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        var renderContext = {\n            canvasContext: ctx,\n            viewport: viewport\n        };\n\n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n\n        canvasContainer.appendChild(canvas);\n\n        console.log(canvasContainer, canvas);\n\n        page.render(renderContext);\n    }\n\n    function renderPages(pdfDoc) {\n        for (var num = 1; num <= pdfDoc.numPages; num++)\n            pdfDoc.getPage(num).then(renderPage);\n    }\n\n    pdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\n    // eslint-disable-next-line no-console\n    console.log(pdfjsLib.version, pdfjsWorker);\n\n    pdfjsLib.getDocument(url).promise.then(renderPages);\n\n}\n\n// eslint-disable-next-line require-jsdoc\nexport function renderPDF() {\n\n    const pdf = M.cfg.wwwroot + '/mod/datalynx/tests/turnen.pdf';\n    const canvas = document.querySelector('#resourceobject').parentElement;\n\n    // eslint-disable-next-line no-console\n    console.log(pdfjsLib);\n\n    renderPDFfunction(pdf, canvas);\n};"],"names":["pdf","M","cfg","wwwroot","canvas","document","querySelector","parentElement","console","log","pdfjsLib","url","canvasContainer","options","scale","renderPage","page","viewport","getViewport","createElement","renderContext","canvasContext","getContext","height","width","appendChild","render","renderPages","pdfDoc","num","numPages","getPage","then","GlobalWorkerOptions","workerSrc","pdfjsWorker","version","getDocument","promise","renderPDFfunction"],"mappings":"kfAmEUA,IAAMC,EAAEC,IAAIC,QAAU,iCACtBC,OAASC,SAASC,cAAc,mBAAmBC,cAGzDC,QAAQC,IAAIC;;;;;;;;SA5CWC,IAAKC,gBAAiBC,SAEzCA,QAAUA,SAAW,CAAEC,MAAO,YAEzBC,WAAWC,UACZC,SAAWD,KAAKE,YAAYL,QAAQC,OACpCV,OAASC,SAASc,cAAc,UAEhCC,cAAgB,CAChBC,cAFMjB,OAAOkB,WAAW,MAGxBL,SAAUA,UAGdb,OAAOmB,OAASN,SAASM,OACzBnB,OAAOoB,MAAQP,SAASO,MAExBZ,gBAAgBa,YAAYrB,QAE5BI,QAAQC,IAAIG,gBAAiBR,QAE7BY,KAAKU,OAAON,wBAGPO,YAAYC,YACZ,IAAIC,IAAM,EAAGA,KAAOD,OAAOE,SAAUD,MACtCD,OAAOG,QAAQF,KAAKG,KAAKjB,YAGjCL,SAASuB,oBAAoBC,UAAYC,cAGzC3B,QAAQC,IAAIC,SAAS0B,QAASD,eAE9BzB,SAAS2B,YAAY1B,KAAK2B,QAAQN,KAAKL,aAavCY,CAAkBvC,IAAKI"}